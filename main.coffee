Parser = require('./src/parser')
addOnelineFnReturns = require('./src/tree_arrange/add_oneline_fn_returns')
fixOpPrecedence = require('./src/tree_arrange/fix_op_precedence')
replaceOpsWithFns = require('./src/tree_arrange/replace_ops_with_fns')
genASTIds = require('./src/tree_arrange/gen_ast_ids')
genTypeInfo = require('./src/gen_type_info')
genSymbols = require('./src/gen_symbols')
SymbolTable = require('./src/symbol_table')
ASTNode = require('./src/ast_node')

fs = require('fs')
inputStr = fs.readFileSync(process.argv[2]).toString()

parser = new Parser()

astTree = parser.parse(inputStr)
astTree = addOnelineFnReturns(astTree)
astTree = fixOpPrecedence(astTree)
astTree = replaceOpsWithFns(astTree)
astTree = genASTIds(astTree)
#console.log(JSON.stringify(astTree, null, 2))
typeInfo = genTypeInfo(astTree)
#console.log(JSON.stringify(typeInfo, null, 2))
symbols = genSymbols(astTree, new SymbolTable(typeInfo))
console.log(JSON.stringify(symbols, null, 2))
#console.log(JSON.stringify(ASTNode.getScopes(astTree), null, 2))
#console.log(astTree.genWast())
